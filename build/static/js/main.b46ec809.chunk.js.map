{"version":3,"sources":["components/Article.js","components/Form.js","containers/ArticleListView.js","containers/ArticleDetailView.js","store/actions/auth.js","store/actions/actionTypes.js","containers/Login.js","containers/Signup.js","routes.js","containers/Layout.js","App.js","serviceWorker.js","store/utility.js","store/reducers/auth.js","index.js"],"names":["IconText","_ref","type","text","react_default","a","createElement","icon","style","marginRight","Articles","list","itemLayout","size","pagination","onChange","page","console","log","pageSize","dataSource","this","props","data","renderItem","item","Item","key","title","actions","Article_IconText","extra","width","alt","src","Meta","avatar","href","concat","id","description","content","Component","FormItem","Form","CustomForm","handleFormSubmit","event","requestType","articleID","target","elements","value","axios","defaults","headers","Content-Type","Authorization","_this","token","post","then","response","catch","error","put","_this2","es_form","onSubmit","label","input","name","placeholder","es_button","htmlType","btnTxt","React","connect","state","ArticleList","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","articles","newProps","get","setState","Article","ArticleDetail","handleDelete","match","params","delete","history","push","article","card","authSuccess","authFail","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","antIcon","fontSize","spin","NormalLoginForm","handleSubmit","e","preventDefault","form","validateFields","err","values","onAuth","userName","password","errorMessage","message","getFieldDecorator","loading","indicator","className","Login_FormItem","rules","required","prefix","color","NavLink","to","WrappedNormalLoginForm","create","username","expirationDate","Date","getTime","setItem","RegistrationForm","confirmDirty","validateFieldsAndScroll","email","confirm","handleConfirmBlur","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","force","Signup_FormItem","validator","onBlur","WrappedRegistrationForm","password1","password2","BaseRouter","Route","exact","path","component","Login","Signup","Header","Layout","Content","Footer","CustomLayout","layout","menu","theme","mode","defaultSelectedKeys","lineHeight","isAuthenticated","onClick","Link","padding","breadcrumb","margin","background","minHeight","children","textAlign","withRouter","App","onTryAutoSignup","BrowserRouter","routes","getItem","undefined","Boolean","window","location","hostname","updateObject","oldObject","updatedProperties","objectSpread","initialState","reducer","arguments","length","action","authStart","authLogout","composeEnhances","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","es","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b46ec809.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { List, Avatar, Icon } from 'antd'\n\nconst IconText = ({ type, text }) => (\n  <span>\n    <Icon type={type} style={{ marginRight: 8 }} />\n    {text}\n  </span>\n)\n\nclass Articles extends Component {\n  render () {\n    return (\n      <List\n        itemLayout='vertical'\n        size='large'\n        pagination={{\n          onChange: (page) => {\n            console.log(page)\n          },\n          pageSize: 3\n        }}\n        dataSource={this.props.data}\n        renderItem={item => (\n          <List.Item\n            key={item.title}\n            actions={[<IconText type='star-o' text='156' />, <IconText type='like-o' text='156' />, <IconText type='message' text='2' />]}\n            extra={<img width={272} alt='logo' src='https://gw.alipayobjects.com/zos/rmsportal/mqaQswcyDLcXyDKnZfES.png' />}\n          >\n            <List.Item.Meta\n              avatar={<Avatar src={item.avatar} />}\n              title={<a href={`/articles/${item.id}`}>{item.title}</a>}\n              description={item.description}\n            />\n            {item.content}\n          </List.Item>\n        )}\n      />\n    )\n  }\n}\n\nexport default Articles\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Form, Input, Button } from 'antd'\nimport axios from 'axios'\n\nconst FormItem = Form.Item\n\nclass CustomForm extends React.Component {\n\n  handleFormSubmit = (event, requestType, articleID) => {\n    const title = event.target.elements.title.value\n    const description = event.target.elements.description.value\n    const content = event.target.elements.content.value\n    axios.defaults.headers = {\n      'Content-Type': 'application/json',\n      Authorization: this.props.token\n    }\n    switch (requestType) {\n      case 'post':\n        return axios.post('https://djreact-blog.herokuapp.com/api/', {\n          title: title,\n          description: description,\n          content: content\n        })\n        .then(response => console.log(response))\n        .catch(error => console.log(error))\n      case 'put':\n        return axios.put(`https://djreact-blog.herokuapp.com/api/${articleID}/`, {\n          title: title,\n          description: description,\n          content: content\n        })\n        .then(response => console.log(response))\n        .catch(error => console.log(error))\n    }\n  }\n\n  render () {\n    return (\n      <div>\n        <Form onSubmit={(event) => this.handleFormSubmit(event, this.props.requestType, this.props.articleID)}>\n          <FormItem label='Title' >\n            <Input name='title' placeholder='Type your titile' />\n          </FormItem>\n          <FormItem label='Description' >\n            <Input name='description' placeholder='Small description of your titile' />\n          </FormItem>\n          <FormItem label='Content' >\n            <Input name='content' placeholder='Your content' />\n          </FormItem>\n          <FormItem>\n            <Button type='primary' htmlType='submit'>{this.props.btnTxt}</Button>\n          </FormItem>\n        </Form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.token\n  }\n}\n\nexport default connect(mapStateToProps)(CustomForm)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport axios from 'axios'\n\nimport Articles from '../components/Article'\nimport CustomForm from '../components/Form'\n\nclass ArticleList extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      articles: []\n    }\n  }\n\n  componentWillReceiveProps (newProps) {\n    if (newProps.token) {\n      axios.defaults.headers = {\n        'Content-Type': 'application/json',\n        Authorization: newProps.token\n      }\n      axios.get('https://djreact-blog.herokuapp.com/api/')\n        .then(response => {\n          this.setState({\n            articles: response.data\n          })\n          console.log(response.data)\n        })\n    }\n  }\n\n  render () {\n    return (\n      <div>\n        <Articles data={this.state.articles} />\n        <br />\n        <h2>Create an Article</h2>\n        <CustomForm requestType='post' articleID={null} btnTxt='Create' />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.token\n  }\n}\n\nexport default connect(mapStateToProps)(ArticleList)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport axios from 'axios'\nimport { Button, Card } from 'antd'\n\nimport CustomForm from '../components/Form'\n\nclass ArticleDetail extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      article: {}\n    }\n  }\n\n  handleDelete = (event) => {\n    if (this.props.token !== null) {\n      axios.defaults.headers = {\n        'Content-Type': 'application/json',\n        Authorization: this.props.token\n      }\n      const { articleID } = this.props.match.params\n      axios.delete(`https://djreact-blog.herokuapp.com/api/${articleID}/`)\n      this.props.history.push('/')\n    } else {\n      // Show some kind of message\n    }\n  }\n\n  componentWillReceiveProps (newProps) {\n    console.log(newProps)\n    if (newProps.token) {\n      axios.defaults.headers = {\n        'Content-Type': 'application/json',\n        Authorization: newProps.token\n      }\n      const { articleID } = this.props.match.params\n      axios.get(`https://djreact-blog.herokuapp.com/api/${articleID}/`)\n        .then(response => {\n          this.setState({\n            article: response.data\n          })\n        })\n    }\n  }\n\n  render () {\n    const { article } = this.state\n    return (\n      <div>\n        <Card title={article.title}>\n          <h3>{article.description}</h3>\n          <p>{article.content}</p>\n        </Card>\n        <br />\n        <h2>Update the Article</h2>\n        <CustomForm requestType='put' articleID={this.props.match.params.articleID} btnTxt='Update' />\n        <form onSubmit={this.handleDelete}>\n          <Button type='danger' htmlType='submit'>Delete</Button>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.token\n  }\n}\n\nexport default connect(mapStateToProps)(ArticleDetail)\n","import axios from 'axios'\n\nimport * as actionTypes from './actionTypes'\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  }\n}\n\nexport const authSuccess = token => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token\n  }\n}\n\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  }\n}\n\nexport const logout = () => {\n  localStorage.removeItem('token')\n  localStorage.removeItem('expirationDate')\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  }\n}\n\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout())\n    }, expirationTime * 1000)\n  }\n}\n\nexport const authLogin = (username, password) => {\n  return dispatch => {\n    dispatch(authStart())\n    axios.post('https://djreact-blog.herokuapp.com/rest-auth/login/', {\n      username: username,\n      password: password\n    })\n      .then(response => {\n        const token = response.data.key\n        const expirationDate = new Date(new Date().getTime() + 3600 * 1000)\n        localStorage.setItem('token', token)\n        localStorage.setItem('expirationDate', expirationDate)\n        dispatch(authSuccess(token))\n        dispatch(checkAuthTimeout(3600))\n      })\n      .catch(error => {\n        dispatch(authFail(error))\n      })\n  }\n}\n\nexport const authSignup = (username, email, password1, password2) => {\n  return dispatch => {\n    dispatch(authStart())\n    axios.post('https://djreact-blog.herokuapp.com/rest-auth/registration/', {\n      username: username,\n      email: email,\n      password1: password1,\n      password2: password2\n    })\n      .then(response => {\n        const token = response.data.key\n        const expirationDate = new Date(new Date().getTime() + 3600 * 1000)\n        localStorage.setItem('token', token)\n        localStorage.setItem('expirationDate', expirationDate)\n        dispatch(authSuccess(token))\n        dispatch(checkAuthTimeout(3600))\n      })\n      .catch(error => {\n        dispatch(authFail(error))\n      })\n  }\n}\n\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem('token')\n    if (token === undefined) {\n      dispatch(logout())\n    } else {\n      const expirationDate = new Date(localStorage.getItem('expirationDate'))\n      if (expirationDate < new Date()) {\n        dispatch(logout())\n      } else {\n        dispatch(authSuccess(token))\n        dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000))\n      }\n    }\n  }\n}\n","export const AUTH_START = 'AUTH_START'\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS'\nexport const AUTH_FAIL = 'AUTH_FAIL'\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT'\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { NavLink } from 'react-router-dom'\nimport { Form, Icon, Input, Button, Spin } from 'antd'\n\nimport * as actions from '../store/actions/auth'\n\nconst FormItem = Form.Item;\n\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n\nclass NormalLoginForm extends React.Component {\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        this.props.onAuth(values.userName, values.password)\n      }\n      this.props.history.push('/')\n    })\n  }\n\n  render() {\n    let errorMessage = null;\n    if (this.props.error) {\n      errorMessage = (\n        <p>{this.props.error.message}</p>\n      )\n    }\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <div>\n        {errorMessage}\n        {\n          this.props.loading\n          ? <Spin indicator={antIcon} />\n          : <Form onSubmit={this.handleSubmit} className='login-form'>\n            <FormItem>\n              {getFieldDecorator('userName', {\n                rules: [{ required: true, message: 'Please input your username!' }],\n              })(\n                <Input prefix={<Icon type='user' style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder='Username' />\n              )}\n            </FormItem>\n            <FormItem>\n              {getFieldDecorator('password', {\n                rules: [{ required: true, message: 'Please input your Password!' }],\n              })(\n                <Input prefix={<Icon type='lock' style={{ color: 'rgba(0,0,0,.25)' }} />} type='password' placeholder='Password' />\n              )}\n            </FormItem>\n            <FormItem>\n              <Button type='primary' htmlType='submit' style={{marginRight: '10px'}}>\n                Log in\n              </Button>\n              Or <NavLink style={{marginRight: '10px'}} to='/signup/'>\n                signup\n              </NavLink>\n            </FormItem>\n          </Form>\n        }\n      </div>\n    )\n  }\n}\n\nconst WrappedNormalLoginForm = Form.create()(NormalLoginForm)\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    error: state.error\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (username, password) => dispatch(actions.authLogin(username, password))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedNormalLoginForm)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { NavLink } from 'react-router-dom'\nimport { Form, Input, Icon, Button } from 'antd'\n\nimport * as actions from '../store/actions/auth'\n\nconst FormItem = Form.Item\n\nclass RegistrationForm extends React.Component {\n  state = {\n    confirmDirty: false\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        this.props.onAuth(values.userName, values.email, values.password, values.confirm)\n      }\n      this.props.history.push('/')\n    })\n  }\n\n  handleConfirmBlur = (e) => {\n    const value = e.target.value\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value })\n  }\n\n  compareToFirstPassword = (rule, value, callback) => {\n    const form = this.props.form\n    if (value && value !== form.getFieldValue('password')) {\n      callback('Two passwords that you enter is inconsistent!')\n    } else {\n      callback()\n    }\n  }\n\n  validateToNextPassword = (rule, value, callback) => {\n    const form = this.props.form\n    if (value && this.state.confirmDirty) {\n      form.validateFields(['confirm'], { force: true })\n    }\n    callback()\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <FormItem>\n          {getFieldDecorator('userName', {\n            rules: [{ required: true, message: 'Please input your username!' }],\n          })(\n            <Input prefix={<Icon type='user' style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder='Username' />\n          )}\n        </FormItem>\n        <FormItem>\n          {getFieldDecorator('email', {\n            rules: [{\n              type: 'email', message: 'The input is not valid E-mail!',\n            }, {\n              required: true, message: 'Please input your E-mail!',\n            }],\n          })(\n            <Input prefix={<Icon type='mail' style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder='Email' />\n          )}\n        </FormItem>\n        <FormItem>\n          {getFieldDecorator('password', {\n            rules: [{\n              required: true, message: 'Please input your password!',\n            }, {\n              validator: this.validateToNextPassword,\n            }],\n          })(\n            <Input prefix={<Icon type='lock' style={{ color: 'rgba(0,0,0,.25)' }} />} type='password' placeholder='Password' />\n          )}\n        </FormItem>\n        <FormItem>\n          {getFieldDecorator('confirm', {\n            rules: [{\n              required: true, message: 'Please confirm your password!',\n            }, {\n              validator: this.compareToFirstPassword,\n            }],\n          })(\n            <Input prefix={<Icon type='lock' style={{ color: 'rgba(0,0,0,.25)' }} />} type='password' placeholder='Confirm Password' onBlur={this.handleConfirmBlur} />\n          )}\n        </FormItem>\n        <FormItem>\n          <Button type='primary' htmlType='submit' style={{marginRight: '10px'}}>\n            Signup\n          </Button>\n          Or <NavLink style={{marginRight: '10px'}} to='/login/'>\n            login\n          </NavLink>\n        </FormItem>\n      </Form>\n    )\n  }\n}\n\nconst WrappedRegistrationForm = Form.create()(RegistrationForm)\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    error: state.error\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (username, email, password1, password2) => dispatch(actions.authSignup(username, email, password1, password2))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedRegistrationForm)\n","import React from 'react'\nimport { Route } from 'react-router-dom'\n\nimport ArticleList from './containers/ArticleListView'\nimport ArticleDetail from './containers/ArticleDetailView'\nimport Login from './containers/Login'\nimport Signup from './containers/Signup'\n\nconst BaseRouter = () => (\n  <div>\n    <Route exact path='/' component={ArticleList} />\n    <Route exact path='/articles/:articleID/' component={ArticleDetail} />\n    <Route exact path='/login/' component={Login} />\n    <Route exact path='/signup/' component={Signup} />\n  </div>\n)\n\nexport default BaseRouter\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Layout, Menu, Breadcrumb } from 'antd'\nimport { Link, withRouter } from 'react-router-dom'\n\nimport * as actions from '../store/actions/auth'\n\nconst { Header, Content, Footer } = Layout\n\nclass CustomLayout extends React.Component {\n  render () {\n    return (\n      <Layout className='layout'>\n        <Header>\n          <div className='logo' />\n          <Menu\n            theme='dark'\n            mode='horizontal'\n            defaultSelectedKeys={['2']}\n            style={{ lineHeight: '64px' }}\n          >\n            {\n              this.props.isAuthenticated\n                ? <Menu.Item key='2' onClick={this.props.logout}>\n                  Logout\n                </Menu.Item>\n                : <Menu.Item key='2'>\n                  <Link to='/login'>Login</Link>\n                </Menu.Item>\n            }\n            <Menu.Item key='1'>\n              <Link to='/'>Posts</Link>\n            </Menu.Item>\n          </Menu>\n        </Header>\n        <Content style={{ padding: '0 50px' }}>\n          <Breadcrumb style={{ margin: '16px 0' }}>\n            <Breadcrumb.Item><Link to='/'>Home</Link></Breadcrumb.Item>\n            <Breadcrumb.Item><Link to='/'>List</Link></Breadcrumb.Item>\n          </Breadcrumb>\n          <div style={{ background: '#fff', padding: 24, minHeight: 280 }}>\n            {this.props.children}\n          </div>\n        </Content>\n        <Footer style={{ textAlign: 'center' }}>\n          Ant Design ©2018 Created by Ant UED\n        </Footer>\n      </Layout>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logout: () => dispatch(actions.logout())\n  }\n}\n\nexport default withRouter(connect(null, mapDispatchToProps)(CustomLayout))\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport BaseRouter from './routes'\nimport 'antd/dist/antd.css'\n\nimport * as actions from './store/actions/auth'\nimport CustomLayout from './containers/Layout'\n\nclass App extends Component {\n  componentDidMount () {\n    this.props.onTryAutoSignup()\n  }\n\n  render () {\n    return (\n      <div>\n        <Router>\n          <CustomLayout {...this.props}>\n            <BaseRouter />\n          </CustomLayout>\n        </Router>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.token !== null\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\n  return {\n    ...oldObject,\n    ...updatedProperties\n  }\n}","import * as actionTypes from '../actions/actionTypes'\nimport { updateObject } from '../utility'\n\nconst initialState = {\n  token: null,\n  error: null,\n  loading: false\n}\n\nconst authStart = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    loading: true\n  })\n}\n\nconst authSuccess = (state, action) => {\n  return updateObject(state, {\n    token: action.token,\n    error: null,\n    loading: false\n  })\n}\n\nconst authFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false\n  })\n}\n\nconst authLogout = (state, action) => {\n  return updateObject(state, {\n    token: null\n  })\n}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START: return authStart(state, action)\n    case actionTypes.AUTH_SUCCESS: return authSuccess(state, action)\n    case actionTypes.AUTH_FAIL: return authFail(state, action)\n    case actionTypes.AUTH_LOGOUT: return authLogout(state, action)\n    default:\n      return state\n  }\n}\n\nexport default reducer\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { createStore, compose, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\n\nimport reducer from './store/reducers/auth'\n\nconst composeEnhances = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(reducer, composeEnhances(\n  applyMiddleware(thunk)\n))\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'))\nserviceWorker.unregister()\n"],"sourceRoot":""}